#define GLUT_DISABLE_ATEXIT_HACK
#include<stdlib.h>
#include<stdio.h>
#include<GL/gl.h>
#include<GL/glu.h>
#include<GL/glut.h>


void draw()
{
    glColor3f(1,0,0);
    glRectf(100,100,200,200);

    glColor3f(1,1,0);
    glRectf(300,300,400,400);
}

void process(int hit,int buffer[])
{
    	int i,j,*ptr,names;
    	printf("hits  %d\n",hit);
    	ptr=buffer;

    	for(i=0;i<hit;i++)
    	{
        	names=*ptr;
		ptr+=3;
        	for(j=0;j<names;j++)
        	{
			if(*ptr==11)printf("Yellow square\n");
			else if(*ptr==10)printf("Red square\n");
			ptr++;
		}

		/*printf("names %d\n",names);
        	for(j=0;j<names;j++)
        	{
        	    ptr++;
        	    printf("z min %d\n",*ptr/0xffffffff);
        	    ptr++;
        	    printf("z max %d\n",*ptr/0xffffffff);
        	    ptr++;
        	    printf("identifier %d\n",*ptr);
        	    ptr++;
        	}*/
    	}
}

void select(int x,int y)
{

    	int hit,buffer[100],viewport[4];
    	glGetIntegerv (GL_VIEWPORT, viewport);

    	glSelectBuffer(100,(GLuint*)buffer);
    	glInitNames();
    	glPushName(0);

    	glRenderMode(GL_SELECT);

    	glPushMatrix();

    	glMatrixMode(GL_PROJECTION);
    	glLoadIdentity();
    	gluPickMatrix(x,viewport[3]-y,50,50,viewport);

    	gluOrtho2D(0,500,0,500);
    	glMatrixMode(GL_MODELVIEW);
    	glLoadIdentity();

    	glPushName(10);
    	glRectf(100,100,200,200);

    	glLoadName(11);
    	glRectf(300,300,400,400);

    	glPopMatrix();

    	hit=glRenderMode(GL_RENDER);

    	process(hit,buffer);

    	glutPostRedisplay();
}

void mouse(int button,int state,int x,int y)
{
    	if(button==GLUT_LEFT_BUTTON && state==GLUT_DOWN)
     		select(x,y);
	if(button==GLUT_RIGHT_BUTTON && state==GLUT_DOWN)
	{
		glViewport(0,0,500,500);
		glMatrixMode(GL_PROJECTION);
		glLoadIdentity();
        	gluOrtho2D(0,500,0,500);
		glMatrixMode(GL_MODELVIEW);
		glutPostRedisplay();
	}

}

void display()
{
    	glClearColor(1.0,1.0,1.0,1.0);
    	glClear(GL_COLOR_BUFFER_BIT);
    	draw();
    	glFlush();
}

void myReshape(int w,int h)
{
	glViewport(0,0,w,h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
       	gluOrtho2D(0,500,0,500);
	glMatrixMode(GL_MODELVIEW);
}

int main(int argc,char **argv)
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowSize(500,500);
	glutCreateWindow("3d Gasket");
	glutReshapeFunc(myReshape);
	glutDisplayFunc(display);
	glutMouseFunc(mouse);
	glutMainLoop();
	return 0;
}

